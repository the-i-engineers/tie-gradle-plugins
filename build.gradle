plugins {
    id "java-gradle-plugin"
    id "jacoco"
    id "maven-publish"
    id "com.gradle.plugin-publish" version "1.3.1"
}

group "ch.tie.gradle.plugins"
version = providers.exec {
    commandLine 'git', 'describe', '--tags', '--abbrev=0'
}.standardOutput.asText.get().trim()

gradlePlugin {
    website.set("https://github.com/the-i-engineers/tie-gradle-plugins")
    vcsUrl.set("https://github.com/the-i-engineers/tie-gradle-plugins.git")
    plugins {
        create("json2mdPlugin") {
            id = "ch.tie.gradle.plugins.json2md"
            implementationClass = "ch.tie.gradle.plugins.json2md.Json2mdPlugin"
            displayName = "Json2md"
            description = "generates a markdown file from 'spring-configuration-metadata.json' to document your configuration properties"
            tags.set(["java", "spring", "automation", "documentation"])
        }
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation "com.fasterxml.jackson.core:jackson-databind:2.19.0"
    implementation "commons-io:commons-io:2.19.0"
    implementation "org.apache.commons:commons-lang3:3.17.0"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.8.2"
}

compileJava {
    options.encoding = "UTF-8"
    options.warnings = true
    options.deprecation = true
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = false
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    include "**/*Test.class"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17) // use jdk17 for backwards compatibility
    }
}

tasks.withType(JavaCompile).configureEach {
    options.warnings = true
    options.deprecation = true
}


allprojects {
    tasks.withType(Javadoc).tap {
        configureEach {
            enabled = false
        }
    }
}
